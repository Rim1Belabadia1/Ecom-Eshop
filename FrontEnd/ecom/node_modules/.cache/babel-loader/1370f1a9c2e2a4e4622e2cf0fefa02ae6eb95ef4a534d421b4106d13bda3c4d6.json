{"ast":null,"code":"import ProductList from\"../Components/ProductList\";import{useLoaderData,json,defer}from'react-router-dom';import{getAuthToken}from\"../util/auth\";import{jsx as _jsx}from\"react/jsx-runtime\";function ProductListPage(){const products=useLoaderData();return/*#__PURE__*/_jsx(ProductList,{products:products});}export default ProductListPage;export async function loader(){const token=getAuthToken();const response=await fetch(process.env.REACT_APP_BASEURL+'products',{method:\"GET\",headers:{'Authorization':'Bearer '+token}});if(!response.ok){// return { isError: true, message: 'Could not fetch events.' };\n// throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\n//   status: 500,\n// });\nthrow json({message:'Could not fetch events.'},{status:500});}else{const resData=await response.json();// console.log(\"Response Data: \"+resData.products[0].productName)\nreturn resData.products;}}","map":{"version":3,"names":["ProductList","useLoaderData","json","defer","getAuthToken","jsx","_jsx","ProductListPage","products","loader","token","response","fetch","process","env","REACT_APP_BASEURL","method","headers","ok","message","status","resData"],"sources":["C:/Users/User/Desktop/eCom in SB and ReactJS/Frontend/ecom/src/Pages/ProductListPage.js"],"sourcesContent":["import ProductList from \"../Components/ProductList\"\r\nimport { useLoaderData, json, defer } from 'react-router-dom';\r\nimport { getAuthToken } from \"../util/auth\";\r\n\r\nfunction ProductListPage() {\r\n\r\n    const products = useLoaderData();\r\n\r\n    return (\r\n        <ProductList products = {products} />\r\n    )\r\n}\r\n\r\nexport default ProductListPage;\r\n\r\nexport async function loader() {\r\n\r\n    const token = getAuthToken();\r\n    const response = await fetch(process.env.REACT_APP_BASEURL+'products',{\r\n        method: \"GET\",\r\n        headers: {\r\n          'Authorization': 'Bearer ' + token,\r\n        }\r\n      });\r\n  \r\n    if (!response.ok) {\r\n      // return { isError: true, message: 'Could not fetch events.' };\r\n      // throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\r\n      //   status: 500,\r\n      // });\r\n      throw json(\r\n        { message: 'Could not fetch events.' },\r\n        {\r\n          status: 500,\r\n        }\r\n      );\r\n    } else {\r\n      const resData = await response.json();\r\n      // console.log(\"Response Data: \"+resData.products[0].productName)\r\n      return resData.products;\r\n    }\r\n  }"],"mappings":"AAAA,MAAO,CAAAA,WAAW,KAAM,2BAA2B,CACnD,OAASC,aAAa,CAAEC,IAAI,CAAEC,KAAK,KAAQ,kBAAkB,CAC7D,OAASC,YAAY,KAAQ,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5C,QAAS,CAAAC,eAAeA,CAAA,CAAG,CAEvB,KAAM,CAAAC,QAAQ,CAAGP,aAAa,CAAC,CAAC,CAEhC,mBACIK,IAAA,CAACN,WAAW,EAACQ,QAAQ,CAAIA,QAAS,CAAE,CAAC,CAE7C,CAEA,cAAe,CAAAD,eAAe,CAE9B,MAAO,eAAe,CAAAE,MAAMA,CAAA,CAAG,CAE3B,KAAM,CAAAC,KAAK,CAAGN,YAAY,CAAC,CAAC,CAC5B,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAC,UAAU,CAAC,CAClEC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,eAAe,CAAE,SAAS,CAAGP,KAC/B,CACF,CAAC,CAAC,CAEJ,GAAI,CAACC,QAAQ,CAACO,EAAE,CAAE,CAChB;AACA;AACA;AACA;AACA,KAAM,CAAAhB,IAAI,CACR,CAAEiB,OAAO,CAAE,yBAA0B,CAAC,CACtC,CACEC,MAAM,CAAE,GACV,CACF,CAAC,CACH,CAAC,IAAM,CACL,KAAM,CAAAC,OAAO,CAAG,KAAM,CAAAV,QAAQ,CAACT,IAAI,CAAC,CAAC,CACrC;AACA,MAAO,CAAAmB,OAAO,CAACb,QAAQ,CACzB,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}