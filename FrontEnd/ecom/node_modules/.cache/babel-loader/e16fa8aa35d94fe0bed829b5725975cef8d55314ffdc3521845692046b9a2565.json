{"ast":null,"code":"import Userlist from\"../Components/Userlist\";import{useLoaderData,json,defer}from'react-router-dom';import{getAuthToken}from\"../util/auth\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function UserListPage(){const users=useLoaderData();return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Userlist,{users:users})});}export default UserListPage;export async function loader(){const token=getAuthToken();const response=await fetch(process.env.REACT_APP_BASEURL+'users',{method:\"GET\",headers:{'Authorization':'Bearer '+token}});if(!response.ok){// return { isError: true, message: 'Could not fetch events.' };\n// throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\n//   status: 500,\n// });\nthrow json({message:'Could not fetch events.'},{status:500});}else{const resData=await response.json();console.log(\"Response Data: \"+resData.users[0].email);return resData.users;}}","map":{"version":3,"names":["Userlist","useLoaderData","json","defer","getAuthToken","jsx","_jsx","Fragment","_Fragment","UserListPage","users","children","loader","token","response","fetch","process","env","REACT_APP_BASEURL","method","headers","ok","message","status","resData","console","log","email"],"sources":["C:/Users/User/Desktop/eCom in SB and ReactJS/Frontend/ecom/src/Pages/UserListPage.js"],"sourcesContent":["import Userlist from \"../Components/Userlist\";\r\nimport { useLoaderData, json, defer } from 'react-router-dom';\r\nimport { getAuthToken } from \"../util/auth\";\r\n\r\n\r\nfunction UserListPage(){\r\n    const users  = useLoaderData();\r\n    \r\n    return (\r\n        <>\r\n        <Userlist users={users}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListPage;\r\n export async function loader() {\r\n\r\n    const token = getAuthToken();\r\n    const response = await fetch(process.env.REACT_APP_BASEURL+'users',{\r\n        method: \"GET\",\r\n        headers: {\r\n          'Authorization': 'Bearer ' + token,\r\n        }\r\n      });\r\n  \r\n    if (!response.ok) {\r\n      // return { isError: true, message: 'Could not fetch events.' };\r\n      // throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\r\n      //   status: 500,\r\n      // });\r\n      throw json(\r\n        { message: 'Could not fetch events.' },\r\n        {\r\n          status: 500,\r\n        }\r\n      );\r\n    } else {\r\n      const resData = await response.json();\r\n       console.log(\"Response Data: \"+resData.users[0].email)\r\n      return resData.users;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  \r\n  "],"mappings":"AAAA,MAAO,CAAAA,QAAQ,KAAM,wBAAwB,CAC7C,OAASC,aAAa,CAAEC,IAAI,CAAEC,KAAK,KAAQ,kBAAkB,CAC7D,OAASC,YAAY,KAAQ,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAG5C,QAAS,CAAAC,YAAYA,CAAA,CAAE,CACnB,KAAM,CAAAC,KAAK,CAAIT,aAAa,CAAC,CAAC,CAE9B,mBACIK,IAAA,CAAAE,SAAA,EAAAG,QAAA,cACAL,IAAA,CAACN,QAAQ,EAACU,KAAK,CAAEA,KAAM,CAAC,CAAC,CACvB,CAAC,CAEX,CAEA,cAAe,CAAAD,YAAY,CAC1B,MAAO,eAAe,CAAAG,MAAMA,CAAA,CAAG,CAE5B,KAAM,CAAAC,KAAK,CAAGT,YAAY,CAAC,CAAC,CAC5B,KAAM,CAAAU,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAC,OAAO,CAAC,CAC/DC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,eAAe,CAAE,SAAS,CAAGP,KAC/B,CACF,CAAC,CAAC,CAEJ,GAAI,CAACC,QAAQ,CAACO,EAAE,CAAE,CAChB;AACA;AACA;AACA;AACA,KAAM,CAAAnB,IAAI,CACR,CAAEoB,OAAO,CAAE,yBAA0B,CAAC,CACtC,CACEC,MAAM,CAAE,GACV,CACF,CAAC,CACH,CAAC,IAAM,CACL,KAAM,CAAAC,OAAO,CAAG,KAAM,CAAAV,QAAQ,CAACZ,IAAI,CAAC,CAAC,CACpCuB,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAACF,OAAO,CAACd,KAAK,CAAC,CAAC,CAAC,CAACiB,KAAK,CAAC,CACtD,MAAO,CAAAH,OAAO,CAACd,KAAK,CACtB,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}