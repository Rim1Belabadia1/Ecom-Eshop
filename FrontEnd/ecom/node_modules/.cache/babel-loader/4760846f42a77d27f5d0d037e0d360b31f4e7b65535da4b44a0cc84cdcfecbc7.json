{"ast":null,"code":"import OrderHistoryList from\"../Components/OrderHistoryList\";import{useLoaderData,json,defer}from'react-router-dom';import{getAuthToken}from\"../util/auth\";import{jsx as _jsx}from\"react/jsx-runtime\";function OrderHistoryPage(){const orderHistory=useLoaderData();return/*#__PURE__*/_jsx(OrderHistoryList,{orderHistory:orderHistory});}export default OrderHistoryPage;export async function loader(){const token=getAuthToken();const response=await fetch(process.env.REACT_APP_BASEURL+'orders',{method:\"GET\",headers:{'Authorization':'Bearer '+token}});if(!response.ok){// return { isError: true, message: 'Could not fetch events.' };\n// throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\n//   status: 500,\n// });\nthrow json({message:'Could not fetch events.'},{status:500});}else{const resData=await response.json();//  console.log(\"Response Data: \"+resData.orders[0].productName)\nreturn resData.orders;}}","map":{"version":3,"names":["OrderHistoryList","useLoaderData","json","defer","getAuthToken","jsx","_jsx","OrderHistoryPage","orderHistory","loader","token","response","fetch","process","env","REACT_APP_BASEURL","method","headers","ok","message","status","resData","orders"],"sources":["C:/Users/User/Desktop/eCom in SB and ReactJS/Frontend/ecom/src/Pages/OrderHistoryPage.js"],"sourcesContent":["import OrderHistoryList  from \"../Components/OrderHistoryList\";\r\nimport { useLoaderData, json, defer } from 'react-router-dom';\r\nimport { getAuthToken } from \"../util/auth\";\r\n\r\nfunction OrderHistoryPage(){\r\n    const orderHistory  = useLoaderData();\r\n    \r\n   return(\r\n    <OrderHistoryList orderHistory = {orderHistory}/>\r\n   )\r\n   \r\n\r\n}\r\n\r\nexport default OrderHistoryPage;\r\n\r\nexport async function loader() {\r\n\r\n    const token = getAuthToken();\r\n    const response = await fetch(process.env.REACT_APP_BASEURL+'orders',{\r\n        method: \"GET\",\r\n        headers: {\r\n          'Authorization': 'Bearer ' + token,\r\n        }\r\n      });\r\n  \r\n    if (!response.ok) {\r\n      // return { isError: true, message: 'Could not fetch events.' };\r\n      // throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\r\n      //   status: 500,\r\n      // });\r\n      throw json(\r\n        { message: 'Could not fetch events.' },\r\n        {\r\n          status: 500,\r\n        }\r\n      );\r\n    } else {\r\n      const resData = await response.json();\r\n     //  console.log(\"Response Data: \"+resData.orders[0].productName)\r\n      return resData.orders;\r\n    }\r\n  }"],"mappings":"AAAA,MAAO,CAAAA,gBAAgB,KAAO,gCAAgC,CAC9D,OAASC,aAAa,CAAEC,IAAI,CAAEC,KAAK,KAAQ,kBAAkB,CAC7D,OAASC,YAAY,KAAQ,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5C,QAAS,CAAAC,gBAAgBA,CAAA,CAAE,CACvB,KAAM,CAAAC,YAAY,CAAIP,aAAa,CAAC,CAAC,CAEtC,mBACCK,IAAA,CAACN,gBAAgB,EAACQ,YAAY,CAAIA,YAAa,CAAC,CAAC,CAIrD,CAEA,cAAe,CAAAD,gBAAgB,CAE/B,MAAO,eAAe,CAAAE,MAAMA,CAAA,CAAG,CAE3B,KAAM,CAAAC,KAAK,CAAGN,YAAY,CAAC,CAAC,CAC5B,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAC,QAAQ,CAAC,CAChEC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,eAAe,CAAE,SAAS,CAAGP,KAC/B,CACF,CAAC,CAAC,CAEJ,GAAI,CAACC,QAAQ,CAACO,EAAE,CAAE,CAChB;AACA;AACA;AACA;AACA,KAAM,CAAAhB,IAAI,CACR,CAAEiB,OAAO,CAAE,yBAA0B,CAAC,CACtC,CACEC,MAAM,CAAE,GACV,CACF,CAAC,CACH,CAAC,IAAM,CACL,KAAM,CAAAC,OAAO,CAAG,KAAM,CAAAV,QAAQ,CAACT,IAAI,CAAC,CAAC,CACtC;AACC,MAAO,CAAAmB,OAAO,CAACC,MAAM,CACvB,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}