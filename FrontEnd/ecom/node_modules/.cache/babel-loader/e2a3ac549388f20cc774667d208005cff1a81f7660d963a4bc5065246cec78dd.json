{"ast":null,"code":"import Products from\"../Components/Products\";import{useLoaderData,json,defer}from'react-router-dom';import{getAuthToken}from\"../util/auth\";import{jsx as _jsx}from\"react/jsx-runtime\";function ProductPage(){const category=useLoaderData();return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Products,{method:\"Post\",category:category})});}export default ProductPage;export async function loader(){const token=getAuthToken();const response=await fetch(process.env.REACT_APP_BASEURL+'categories',{method:\"GET\",headers:{'Authorization':'Bearer '+token}});if(!response.ok){// return { isError: true, message: 'Could not fetch events.' };\n// throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\n//   status: 500,\n// });\nthrow json({message:'Could not fetch events.'},{status:500});}else{const resData=await response.json();// console.log(\"Response Data: \"+resData.users[0].email)\nreturn resData.categories;}}","map":{"version":3,"names":["Products","useLoaderData","json","defer","getAuthToken","jsx","_jsx","ProductPage","category","children","method","loader","token","response","fetch","process","env","REACT_APP_BASEURL","headers","ok","message","status","resData","categories"],"sources":["C:/Users/User/Desktop/eCom in SB and ReactJS/Frontend/ecom/src/Pages/ProductPage.js"],"sourcesContent":["import Products from \"../Components/Products\";\r\nimport { useLoaderData, json, defer } from 'react-router-dom';\r\nimport { getAuthToken } from \"../util/auth\";\r\n\r\nfunction ProductPage() {\r\n\r\n    const category  = useLoaderData();\r\n\r\n    return (\r\n        <div>\r\n            <Products method=\"Post\" category = {category}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductPage;\r\n\r\nexport async function loader() {\r\n\r\n    const token = getAuthToken();\r\n    const response = await fetch(process.env.REACT_APP_BASEURL+'categories',{\r\n        method: \"GET\",\r\n        headers: {\r\n          'Authorization': 'Bearer ' + token,\r\n        }\r\n      });\r\n  \r\n    if (!response.ok) {\r\n      // return { isError: true, message: 'Could not fetch events.' };\r\n      // throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\r\n      //   status: 500,\r\n      // });\r\n      throw json(\r\n        { message: 'Could not fetch events.' },\r\n        {\r\n          status: 500,\r\n        }\r\n      );\r\n    } else {\r\n      const resData = await response.json();\r\n      // console.log(\"Response Data: \"+resData.users[0].email)\r\n      return resData.categories;\r\n    }\r\n  }"],"mappings":"AAAA,MAAO,CAAAA,QAAQ,KAAM,wBAAwB,CAC7C,OAASC,aAAa,CAAEC,IAAI,CAAEC,KAAK,KAAQ,kBAAkB,CAC7D,OAASC,YAAY,KAAQ,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5C,QAAS,CAAAC,WAAWA,CAAA,CAAG,CAEnB,KAAM,CAAAC,QAAQ,CAAIP,aAAa,CAAC,CAAC,CAEjC,mBACIK,IAAA,QAAAG,QAAA,cACIH,IAAA,CAACN,QAAQ,EAACU,MAAM,CAAC,MAAM,CAACF,QAAQ,CAAIA,QAAS,CAAC,CAAC,CAC9C,CAAC,CAEd,CAEA,cAAe,CAAAD,WAAW,CAE1B,MAAO,eAAe,CAAAI,MAAMA,CAAA,CAAG,CAE3B,KAAM,CAAAC,KAAK,CAAGR,YAAY,CAAC,CAAC,CAC5B,KAAM,CAAAS,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAC,YAAY,CAAC,CACpEP,MAAM,CAAE,KAAK,CACbQ,OAAO,CAAE,CACP,eAAe,CAAE,SAAS,CAAGN,KAC/B,CACF,CAAC,CAAC,CAEJ,GAAI,CAACC,QAAQ,CAACM,EAAE,CAAE,CAChB;AACA;AACA;AACA;AACA,KAAM,CAAAjB,IAAI,CACR,CAAEkB,OAAO,CAAE,yBAA0B,CAAC,CACtC,CACEC,MAAM,CAAE,GACV,CACF,CAAC,CACH,CAAC,IAAM,CACL,KAAM,CAAAC,OAAO,CAAG,KAAM,CAAAT,QAAQ,CAACX,IAAI,CAAC,CAAC,CACrC;AACA,MAAO,CAAAoB,OAAO,CAACC,UAAU,CAC3B,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}